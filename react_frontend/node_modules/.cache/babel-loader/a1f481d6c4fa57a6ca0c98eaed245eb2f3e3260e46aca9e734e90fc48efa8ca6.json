{"ast":null,"code":"var _jsxFileName = \"/home/miller/Desktop/object_detection_api/react_frontend/src/components/ObjectDetection.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './ObjectDetection.css';\n\n// Компонент для детекции объектов на изображениях\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ObjectDetection = () => {\n  _s();\n  // Состояния компонента:\n  const [file, setFile] = useState(null); // Выбранный файл изображения\n  const [preview, setPreview] = useState(null); // URL для предпросмотра изображения\n  const [result, setResult] = useState(null); // URL обработанного изображения с детекцией\n  const [loading, setLoading] = useState(false); // Флаг загрузки (показывает процесс обработки)\n  const [error, setError] = useState(null); // Сообщение об ошибке (если возникла)\n\n  // Обработчик изменения выбранного файла\n  const handleFileChange = e => {\n    const selectedFile = e.target.files[0]; // Получаем первый выбранный файл\n    if (selectedFile) {\n      setFile(selectedFile); // Сохраняем файл в состоянии\n      // Создаем временный URL для предпросмотра\n      setPreview(URL.createObjectURL(selectedFile));\n      setResult(null); // Сбрасываем предыдущий результат\n      setError(null); // Сбрасываем ошибки\n    }\n  };\n\n  // Обработчик отправки формы (запуск детекции)\n  const handleSubmit = async e => {\n    e.preventDefault(); // Предотвращаем стандартное поведение формы\n    if (!file) return; // Если файл не выбран, ничего не делаем\n\n    setLoading(true); // Включаем состояние загрузки\n    setError(null); // Сбрасываем ошибки\n\n    // Создаем FormData для отправки файла\n    const formData = new FormData();\n    formData.append('file', file); // Добавляем файл в форму\n\n    try {\n      // Отправляем запрос к FastAPI бэкенду\n      const response = await fetch('http://localhost:8000/detect', {\n        method: 'POST',\n        body: formData // Отправляем FormData с изображением\n      });\n\n      // Если ответ не успешный (не 2xx)\n      if (!response.ok) {\n        const errorData = await response.json(); // Пытаемся получить JSON с ошибкой\n        throw new Error(errorData.detail || 'Error processing image');\n      }\n\n      // Получаем обработанное изображение как Blob\n      const imageBlob = await response.blob();\n      // Создаем URL для отображения результата\n      const imageUrl = URL.createObjectURL(imageBlob);\n      setResult(imageUrl); // Сохраняем результат\n    } catch (err) {\n      setError(err.message); // Сохраняем сообщение об ошибке\n    } finally {\n      setLoading(false); // Выключаем состояние загрузки в любом случае\n    }\n  };\n\n  // Рендер компонента\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Object Detection with YOLOv8\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"file-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: \"image-upload\",\n          accept: \"image/*\" // Принимаем только изображения\n          ,\n          onChange: handleFileChange,\n          disabled: loading // Блокируем во время обработки\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"image-upload\",\n          children: file ? file.name : 'Choose an image...'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: !file || loading // Блокируем если нет файла или идет обработка\n        ,\n        className: \"detect-button\",\n        children: loading ? 'Processing...' : 'Detect Objects'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results\",\n      children: [preview && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Original Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: preview,\n          alt: \"Original\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this), result && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Detection Results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: result,\n          alt: \"Detection Result\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(ObjectDetection, \"e8NacdyMj3YS+gLW1bAdGblpTtE=\");\n_c = ObjectDetection;\nexport default ObjectDetection;\nvar _c;\n$RefreshReg$(_c, \"ObjectDetection\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ObjectDetection","_s","file","setFile","preview","setPreview","result","setResult","loading","setLoading","error","setError","handleFileChange","e","selectedFile","target","files","URL","createObjectURL","handleSubmit","preventDefault","formData","FormData","append","response","fetch","method","body","ok","errorData","json","Error","detail","imageBlob","blob","imageUrl","err","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","id","accept","onChange","disabled","htmlFor","name","src","alt","_c","$RefreshReg$"],"sources":["/home/miller/Desktop/object_detection_api/react_frontend/src/components/ObjectDetection.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport './ObjectDetection.css';\n\n// Компонент для детекции объектов на изображениях\nconst ObjectDetection = () => {\n  // Состояния компонента:\n  const [file, setFile] = useState(null);          // Выбранный файл изображения\n  const [preview, setPreview] = useState(null);    // URL для предпросмотра изображения\n  const [result, setResult] = useState(null);      // URL обработанного изображения с детекцией\n  const [loading, setLoading] = useState(false);  // Флаг загрузки (показывает процесс обработки)\n  const [error, setError] = useState(null);       // Сообщение об ошибке (если возникла)\n\n  // Обработчик изменения выбранного файла\n  const handleFileChange = (e) => {\n    const selectedFile = e.target.files[0];  // Получаем первый выбранный файл\n    if (selectedFile) {\n      setFile(selectedFile);  // Сохраняем файл в состоянии\n      // Создаем временный URL для предпросмотра\n      setPreview(URL.createObjectURL(selectedFile));\n      setResult(null);  // Сбрасываем предыдущий результат\n      setError(null);   // Сбрасываем ошибки\n    }\n  };\n\n  // Обработчик отправки формы (запуск детекции)\n  const handleSubmit = async (e) => {\n    e.preventDefault();  // Предотвращаем стандартное поведение формы\n    if (!file) return;   // Если файл не выбран, ничего не делаем\n\n    setLoading(true);    // Включаем состояние загрузки\n    setError(null);     // Сбрасываем ошибки\n\n    // Создаем FormData для отправки файла\n    const formData = new FormData();\n    formData.append('file', file);  // Добавляем файл в форму\n\n    try {\n      // Отправляем запрос к FastAPI бэкенду\n      const response = await fetch('http://localhost:8000/detect', {\n        method: 'POST',\n        body: formData,  // Отправляем FormData с изображением\n      });\n\n      // Если ответ не успешный (не 2xx)\n      if (!response.ok) {\n        const errorData = await response.json();  // Пытаемся получить JSON с ошибкой\n        throw new Error(errorData.detail || 'Error processing image');\n      }\n\n      // Получаем обработанное изображение как Blob\n      const imageBlob = await response.blob();\n      // Создаем URL для отображения результата\n      const imageUrl = URL.createObjectURL(imageBlob);\n      setResult(imageUrl);  // Сохраняем результат\n    } catch (err) {\n      setError(err.message);  // Сохраняем сообщение об ошибке\n    } finally {\n      setLoading(false);  // Выключаем состояние загрузки в любом случае\n    }\n  };\n\n  // Рендер компонента\n  return (\n    <div className=\"container\">\n      <h1>Object Detection with YOLOv8</h1>\n      \n      {/* Форма для загрузки изображения */}\n      <form onSubmit={handleSubmit}>\n        <div className=\"file-input\">\n          {/* Скрытый input для выбора файла */}\n          <input\n            type=\"file\"\n            id=\"image-upload\"\n            accept=\"image/*\"  // Принимаем только изображения\n            onChange={handleFileChange}\n            disabled={loading}  // Блокируем во время обработки\n          />\n          {/* Кастомная кнопка для выбора файла */}\n          <label htmlFor=\"image-upload\">\n            {file ? file.name : 'Choose an image...'}\n          </label>\n        </div>\n        \n        {/* Кнопка для запуска детекции */}\n        <button \n          type=\"submit\" \n          disabled={!file || loading}  // Блокируем если нет файла или идет обработка\n          className=\"detect-button\"\n        >\n          {loading ? 'Processing...' : 'Detect Objects'}\n        </button>\n      </form>\n\n      {/* Блок для отображения ошибок */}\n      {error && <div className=\"error\">{error}</div>}\n\n      {/* Блок для отображения результатов */}\n      <div className=\"results\">\n        {/* Предпросмотр оригинального изображения */}\n        {preview && (\n          <div className=\"image-container\">\n            <h3>Original Image</h3>\n            <img src={preview} alt=\"Original\" />\n          </div>\n        )}\n        \n        {/* Результат детекции объектов */}\n        {result && (\n          <div className=\"image-container\">\n            <h3>Detection Results</h3>\n            <img src={result} alt=\"Detection Result\" />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ObjectDetection;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}